openapi: 3.0.0
info:
  version: '1.0.0'
  title: openrecipes
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  description: |
    # Openrecipes
    This is the API doc of https://github.com/oliverdozsa/openrecipes.
paths:
  '/ingredientnames':
    get:
      summary: Query a page of ingredient names
      parameters:
        - name: languageId
          in: query
          schema:
            type: integer
          required: true
        - name: nameLike
          in: query
          schema:
            type: string
            minLength: 2
          required: false
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 0
            maximum: 50
            default: 25
      responses:
        '200':
          description: Page of ingredient names.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientNamePage'
              example:
                totalCount: 2
                items: [{ingredientId: 1, name: 'Lemon'}, {ingredientId: 2, name: 'Orange'}]
        '400':
          description: Map of error keys to error messages
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              example:
                "languagedId": ["Missing field", "Another problem"]
                "": ["Some global errors", "And some more"]

  '/sourcepages':
    get:
      summary: All source pages
      responses:
        '200':
          description: List of source pages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourcePageList'
              example:
                totalCount: 2
                items: [{id: 1, name: "TheRecipeWebSite"}, {id: 2, name: "Cooking.com"}]

  '/recipes':
    get:
      summary: A page of recipes
      parameters:
        - name: searchMode
          in: query
          required: false
          schema:
            type: string
            enum: [composedofnumber, composedofratio]
          description: >
            Valid search modes:
             * composed-of-number - Search is based on the number of ingredients (according to the included ingredients param) in recipes
             * composed-of-ratio - Search is based on the ratio of ingredients (according to the included ingredients param) in recipes
        - name: minIngs
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: Recipes with less than this number of ingredients will be excluded from the search.
        - name: maxIngs
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: Recipes with more than this number of ingredients will be excluded from the search.
        - name: orderBy
          in: query
          required: false
          schema:
            type: string
            enum: [name, numofings]
          description: >
            Valid order by clauses:
             * name: Order by recipe name.
             * numofings: Order number of ingredients of recipes
        - name: orderBySort
          in: query
          required: false
          schema:
            type: string
            enum: [asc, desc]
        - name: unknownIngs
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: >
            This is required only in case the searchMode param is composedofnumber. It defines how many unknown
            ingredients to consider (ingredients that aren't part of the included ingredients).
        - name: unknownIngsRel
          in: query
          required: false
          schema:
            type: string
            enum: [eq, gt, lt, ge, le]
          description: >
            This is required only in case the searchMode param is composedofnumber. It defines the how to interpret the
            unknownIngs parameter.
             * eq - equal
             * gt - greater than
             * lt - less than
             * ge - greater than or equal
             * le - less than or equal
        - name: goodIngs
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: >
            This is required only in case the searchMode param is composedofnumber. It defines how many
            ingredients to consider from the included ingredients.
        - name: goodIngsRel
          in: query
          required: false
          schema:
            type: string
            enum: [eq, gt, lt, ge, le]
          description: >
            This is required only in case the searchMode param is composedofnumber. It defines the how to interpret the
            goodIngs parameter.
             * eq - equal
             * gt - greater than
             * lt - less than
             * ge - greater than or equal
             * le - less than or equal
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: goodIngsRatio
          in: query
          schema:
            type: number
            format: float
            minimum: 0.0
            maximum: 1.0
          description: >
            This is required only in case the searchMode param is composedofratio. It
        - name: nameLike
          in: query
          schema:
            type: string
        - name: exIngs
          in: query
          schema:
            type: array
            items:
              type: integer
        - name: exIngTags
          in: query
          schema:
            type: array
            items:
              type: integer
        - name: inIngs
          in: query
          schema:
            type: array
            items:
              type: integer
        - name: inIngTags
          in: query
          schema:
            type: array
            items:
              type: integer
        - name: sourcePages
          in: query
          schema:
            type: array
            items:
              type: integer
        - name: languageId
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: A page of recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePage'

  '/recipes/{id}':
    get:
      summary: A single recipe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'

components:
  schemas:
    IngredientName:
      description: An ingredient name.
      type: object
      properties:
        id:
          description: ID
          type: integer
        name:
          description: The name of the ingredient
          type: string
    IngredientNamePage:
      description: Page of ingredient names.
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/IngredientName'
        totalCount:
          type: integer
    SourcePageList:
      description: List of source pages.
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SourcePage'
        totalCount:
          type: integer
    SourcePage:
      description: A source page.
      type: object
      properties:
        id:
          description: ID
          type: integer
        name:
          description: The name of the source page.
          type: string
    RecipePage:
      description: Page of recipes.
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'
        totalCount:
          type: integer
    Recipe:
      type: object
      description: A recipe
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
        numofings:
          type: integer
        sourcePage:
          $ref: '#/components/schemas/SourcePage'
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/IngredientName'
