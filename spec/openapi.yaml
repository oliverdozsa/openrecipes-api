openapi: 3.0.0
info:
  version: '1.0.0'
  title: openrecipes
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  description: |
    # Openrecipes
    This is the API doc of https://github.com/oliverdozsa/openrecipes.
paths:
  '/ingredientnames':
    get:
      summary: Query a page of ingredient names
      parameters:
        - name: languageId
          in: query
          schema:
            type: integer
          required: true
        - name: nameLike
          in: query
          schema:
            type: string
            minLength: 2
          required: false
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 0
            maximum: 50
            default: 25
      responses:
        '200':
          description: Page of ingredient names.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientNamePage'
              example:
                totalCount: 2
                items: [{id: 1, name: 'Lemon'}, {id: 2, name: 'Orange'}]
        '400':
          description: Map of error keys to error messages
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              example:
                "languagedId": ["Missing field", "Another problem"]
                "": ["Some global errors", "And some more"]

  '/ingredienttags':
    get:
      summary: Query a page of ingredient tags
      parameters:
        - name: languageId
          in: query
          schema:
            type: integer
          required: true
        - name: nameLike
          in: query
          schema:
            type: string
            minLength: 2
          required: false
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 0
            maximum: 50
            default: 25
      responses:
        '200':
          description: Page of ingredient tags.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientTagPage'
              example:
                totalCount: 2
                items: [{id: 1, name: 'Fruit'}, {id: 2, name: 'Vegetable'}]
        '400':
          description: Map of error keys to error messages
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              example:
                "languagedId": ["Missing field", "Another problem"]
                "": ["Some global errors", "And some more"]
  
  '/sourcepages':
    get:
      summary: All source pages
      responses:
        '200':
          description: List of source pages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourcePageList'
              example:
                totalCount: 2
                items: [{id: 1, name: "TheRecipeWebSite"}, {id: 2, name: "Cooking.com"}]

  '/recipes':
    get:
      summary: A page of recipes
      parameters:
        - name: searchMode
          in: query
          required: false
          schema:
            type: string
            enum: [composed-of-number, composed-of-ratio]
          description: >
            Valid search modes:
             * composed-of-number - Search is based on the number of ingredients (according to the included ingredients (inIngs) param) in recipes
             * composed-of-ratio - Search is based on the ratio of ingredients (according to the included ingredients (inIngs) param) in recipes
        - name: inIngs
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          description: >
            Contains the ids of included ingredients. Must be mutually exclusive with exIngs, and ingredients resolved from exIngTags.
            It's meaning is defined by the searchMode parameter.
        - name: inIngTags
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          description: >
            Contains the ids of included ingredient tags. It has the same meaning that the parameter inIngs, but the tags
            will be resolved to their corresponding ingredients first. If both inIngs and inIngTags are present, ingredients
            after resolution will be joined in a set.
        - name: minIngs
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: Recipes with less than this number of ingredients will be excluded from the search.
        - name: maxIngs
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: Recipes with more than this number of ingredients will be excluded from the search.
        - name: orderBy
          in: query
          required: false
          schema:
            type: string
            enum: [name, numofings]
          description: >
            Valid order by clauses:
             * name: Order by recipe name.
             * numofings: Order number of ingredients of recipes
        - name: orderBySort
          in: query
          required: false
          schema:
            type: string
            enum: [asc, desc]
        - name: unknownIngs
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: >
            This is required only in case the searchMode param is composed-of-number. It defines how many unknown
            ingredients to consider (ingredients that aren't part of the included ingredients).
        - name: unknownIngsRel
          in: query
          required: false
          schema:
            type: string
            enum: [eq, gt, lt, ge, le]
          description: >
            This is required only in case the searchMode param is composed-of-number. It defines the how to interpret the
            unknownIngs parameter.
             * eq - equal
             * gt - greater than
             * lt - less than
             * ge - greater than or equal
             * le - less than or equal
        - name: goodIngs
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: >
            This is required only in case the searchMode param is composed-of-number. It defines how many
            ingredients to consider from the included ingredients.
        - name: goodIngsRel
          in: query
          required: false
          schema:
            type: string
            enum: [eq, gt, lt, ge, le]
          description: >
            This is required only in case the searchMode param is composed-of-number. It defines the how to interpret the
            goodIngs parameter.
             * eq - equal
             * gt - greater than
             * lt - less than
             * ge - greater than or equal
             * le - less than or equal
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: goodIngsRatio
          in: query
          required: false
          schema:
            type: number
            format: float
            minimum: 0.0
            maximum: 1.0
          description: >
            This is required only in case the searchMode param is composed-of-ratio. It defines the ratio of ingredients
            that are present in the included ingredients compared to the number of ingredients in recipes.
            In more detail, for each recipe it's calculated how many of its ingredients are present in the included
            ingredients. Then this number is divided by the total number of ingredient of the recipe.
            Recipes that have greater or equal ratio than this number will be returned.
        - name: nameLike
          in: query
          required: false
          schema:
            type: string
          description: >
            Recipes with names like the value of this parameter will be included in the search
        - name: exIngs
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          description: >
            Contains the ids of excluded ingredients. Must be mutually exclusive with inIngs, and ingredients resolved from ingIngTags.
            Recipes that have any of its ingredient in this list will be excluded.
        - name: exIngTags
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          description: >
            Contains the ids of excluded ingredient tags. It has the same meaning that the parameter exIngs, but the tags
            will be resolved to their corresponding ingredients first. If both exIngs and exIngTags are present, ingredients
            after resolution will be joined in a set.
        - name: sourcePages
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          description: >
            Ids of source pages. Only recipes that are from these source pages will be searched.
        - name: languageId
          in: query
          required: false
          schema:
            type: integer
          description: >
            Language id for recipes' ingredient names.
      responses:
        '200':
          description: A page of recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePage'
              example:
                {
                  totalCount: 10,
                  items: [
                    {
                      id: 1, name: "Fried egg", url: "http://example.com/fried-egg", numofings: 2,
                      sourcePage: {id: 1, name: "Example Recipes"},
                      ingredients: [{id: 31, name: "egg"}, {id: 21, name: "oil"}]
                    }
                  ]
                }
        '400':
          description: Map of error keys to error messages
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              example:
                "languagedId": ["Missing field", "Another problem"]
                "": ["Some global errors", "And some more"]

  '/recipes/{id}':
    get:
      summary: A single recipe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'

components:
  schemas:
    IngredientName:
      description: An ingredient name.
      type: object
      properties:
        id:
          description: ID of ingredient
          type: integer
        name:
          description: The name of the ingredient
          type: string
    IngredientNamePage:
      description: Page of ingredient names.
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/IngredientName'
        totalCount:
          type: integer
    SourcePageList:
      description: List of source pages.
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SourcePage'
        totalCount:
          type: integer
    SourcePage:
      description: A source page.
      type: object
      properties:
        id:
          description: ID
          type: integer
        name:
          description: The name of the source page.
          type: string
    RecipePage:
      description: Page of recipes.
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'
        totalCount:
          type: integer
    Recipe:
      type: object
      description: A recipe
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
        numofings:
          type: integer
        sourcePage:
          $ref: '#/components/schemas/SourcePage'
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/IngredientName'
    IngredientTag:
      description: An ingredient tag
      type: object
      properties:
        id:
          description: ID og tag
          type: integer
        name:
          description: Name
          type: string
    IngredientTagPage:
      description: Page of ingredient tags.
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/IngredientTag'
        totalCount:
          type: integer